generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  bio       String?
  avatar    String?
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  campaigns Campaign[]
  donations Donation[]

  @@map("users")
}

model Campaign {
  id          String   @id @default(cuid())
  title       String
  description String
  goalAmount  Float
  currentAmount Float @default(0)
  imageUrl    String?
  status      CampaignStatus @default(ACTIVE)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userId      String
  user        User @relation(fields: [userId], references: [id], onDelete: Cascade)

  walletAddresses WalletAddress[]
  donations       Donation[]
  solanaWallet    SolanaWallet?

  @@map("campaigns")
}

model WalletAddress {
  id         String @id @default(cuid())
  address    String
  blockchain String
  createdAt  DateTime @default(now())

  campaignId String
  campaign   Campaign @relation(fields: [campaignId], references: [id], onDelete: Cascade)

  @@map("wallet_addresses")
}

model Donation {
  id            String   @id @default(cuid())
  amount        Float
  adminFee      Float
  txHash        String   @unique
  blockchain    String
  donorAddress  String?
  createdAt     DateTime @default(now())

  campaignId    String
  campaign      Campaign @relation(fields: [campaignId], references: [id], onDelete: Cascade)

  userId        String?
  user          User? @relation(fields: [userId], references: [id])

  @@map("donations")
}

model SolanaWallet {
  id         String @id @default(cuid())
  publicKey  String
  secretKey  String
  balance    Float  @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  campaignId String   @unique
  campaign   Campaign @relation(fields: [campaignId], references: [id], onDelete: Cascade)

  @@map("solana_wallets")
}

enum CampaignStatus {
  ACTIVE
  PAUSED
  COMPLETED
  CANCELLED
}